

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!this.IsPostBack)
        {

            this.Chart1.ViewStateContent = SerializationContents.All;
            this.Chart1.EnableViewState = true;

            this.Chart1.Legends[0].CustomItems[0].Cells[0].PostBackValue = "LegendClick/0";
            this.Chart1.Legends[0].CustomItems[1].Cells[0].PostBackValue = "LegendClick/1";
            this.Chart1.Legends[0].CustomItems[2].Cells[0].PostBackValue = "LegendClick/2";
			
        }
    }
    
    protected void Chart1_Click(object sender, ImageMapEventArgs e)
    {
        // If user clicks on the map area attribute that corresponds to a legend item
        if (e.PostBackValue.StartsWith("LegendClick"))
        {
            string args = e.PostBackValue.Split('/')[1];
            // Identify which legend item was clicked
            int index = int.Parse(args);

            // Legend item result
            LegendItem legendItem = this.Chart1.Legends[0].CustomItems[index];

            // Resets all radio button images to be unchecked
            foreach (LegendItem item in this.Chart1.Legends[0].CustomItems)
            {
                item.Cells[0].ImageTransparentColor = Color.Black;
                item.Cells[0].Image = "radio_button_unchecked.gif";
            }

            this.Chart1.Series[0].ChartType = (SeriesChartType)Enum.Parse(typeof(SeriesChartType), legendItem.Cells[1].Text, true);
            this.Chart1.Series[0].BorderWidth = this.Chart1.Series[0].ChartType == SeriesChartType.Line ? 3 : 1;
            legendItem.Cells[0].Image = "radio_button_checked.gif";
            legendItem.Cells[0].ImageTransparentColor = Color.Green;
        }
    }
