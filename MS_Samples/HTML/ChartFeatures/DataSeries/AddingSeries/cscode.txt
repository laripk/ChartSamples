using System.Web.UI.DataVisualization.Charting;
...

private void Form_Init(object sender, System.EventArgs e)
{
	// Enabling the viewstate must be done very early in the loading of 
	// a web page which is why it is done in the Page Init.  The preferred
	// way to initialize the viewstate is done in the property browser
	// so the property value is persisted in the ASPX page.
	
	// Enable or disable the view state
	Chart1.EnableViewState = true;
}

private void Page_Load(object sender, System.EventArgs e)
{ 

	// Determine what content should be serialized in the browser.
	// By default all appearance and data is serialized, so we 
	// don't have to re-access the source data for
	// all other series that exist.
	Chart1.ViewStateContent = SerializationContents.Default;

	string [] charts = {"Column", "Spline", "StepLine", "Spline" };
	Random rnd = new Random();

	if(this.IsPostBack)
	{
		if(this.Request.Form["AddButton"] != null)
		{
			// Add a series to the chart
			Series series = Chart1.Series.Add("Series " + (Chart1.Series.Count+1).ToString());
			series.ChartArea = "Default";
			series.ChartType = charts[Chart1.Series.Count-1];
			series.BorderWidth = 2;

			int j = 0;
			int MaxPoints = 10;
			while(j++ < MaxPoints)
				series.Points.Add(rnd.Next(5,20));
		}
		else if(this.Request.Form["RemoveButton"] != null)
		{
				// Remove the last series in the list of the series
				Chart1.Series.RemoveAt(Chart1.Series.Count-1);
		
		}
	}	
	...	
}
...
