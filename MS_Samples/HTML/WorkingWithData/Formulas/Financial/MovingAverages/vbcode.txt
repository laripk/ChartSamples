Imports System.Web.UI.DataVisualization.Charting
...

'/ 
'/ This method calculates different Moving Averages.
'/ 
Private Sub Calculate() 
   Dim period As String = Period.SelectedItem.Value
   
   ' Calculates simple moving average
   If SimpleMovingAverage.Checked Then
      Chart1.DataManipulator.FinancialFormula(FinancialFormula.MovingAverage, period, "Input", "Simple")
      Chart1.Series("Simple").Color = Color.Red
      Chart1.Series("Simple").ChartType = SeriesChartType.Line
      Chart1.Series("Simple").BorderWidth = 2
      Chart1.Series("Simple").ShadowOffset = 1
   End If
   
   ' Calculates exponential moving average
   If ExponentialMovingAverage.Checked Then
      Chart1.DataManipulator.FinancialFormula(FinancialFormula.ExponentialMovingAverage, period, "Input", "Exponential")
      Chart1.Series("Exponential").Color = Color.Blue
      Chart1.Series("Exponential").ChartType = SeriesChartType.Line
      Chart1.Series("Exponential").BorderWidth = 2
      Chart1.Series("Exponential").ShadowOffset = 1
   End If
   
   ' Calculates triangular moving average
   If TriangularMovingAverage.Checked Then
      Chart1.DataManipulator.FinancialFormula(FinancialFormula.TriangularMovingAverage, period, "Input", "Triangular")
      Chart1.Series("Triangular").Color = Color.Green
      Chart1.Series("Triangular").ChartType = SeriesChartType.Line
      Chart1.Series("Triangular").BorderWidth = 2
      Chart1.Series("Triangular").ShadowOffset = 1
      
      ' Remove historical data
      If HistoricalData.Checked And Not IsStartedFromFirst.Checked Then
         Chart1.DataManipulator.Filter(CompareMethod.LessThanOrEqualTo, [Double].Parse(period) - 1.0, "Triangular", "Triangular", "X")
      End If
   End If 
   ' Calculates weighted moving average
   If WeightedMovingAverage.Checked Then
      Chart1.DataManipulator.FinancialFormula(FinancialFormula.WeightedMovingAverage, period, "Input", "Weighted")
      Chart1.Series("Weighted").Color = Color.Yellow
      Chart1.Series("Weighted").ChartType = SeriesChartType.Line
      Chart1.Series("Weighted").BorderWidth = 2
      Chart1.Series("Weighted").ShadowOffset = 1
   End If
   
   ' Remove historical data
   If HistoricalData.Checked And Not IsStartedFromFirst.Checked Then
      Chart1.DataManipulator.Filter(CompareMethod.LessThanOrEqualTo, [Double].Parse(period) - 1.0, "Input", "Input", "X")
   End If 
   
End Sub 'Calculate
...